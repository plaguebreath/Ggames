<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_fokker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variables
global.runway = false;
global.isplanecrashed = false;
image_speed = 1;

escaped = keyboard_check(vk_backspace);

if (escaped){
  y = obj_ground.y - obj_ground.sprite_height ;
  x = 60;
  gravity = 0;
  speed = 0;
  direction =0;
}
   
//controllo se Ã¨ sulla pista di atterraggio ....
if  place_meeting(x,y+vspeed,obj_runway)
  {
  global.runway = true;
  } 
    
/// Gravity check 
//if (place_meeting(x+hspeed -10,y - 10 ,obj_ground) || place_meeting(x -10,y+vspeed -10,obj_ground))
if  place_meeting(x,y+vspeed -10,obj_ground){
  //if ((direction &gt;= 20 || direction &lt;= 345) &amp;&amp; speed &gt; 0.5 &amp;&amp; !(global.runway)){
  if (!global.runway){
    global.isplanelanded =  false;
    global.isplanecrashed =  true;
  }else{
    y = obj_ground.y - obj_ground.sprite_height ;
    global.isplanelanded =  true;
    global.isplanecrashed =  false;
  }
  gravity = 0;
  speed = 0;
  direction =0;
}else{
  if !(global.isplanelanded)
  {
    gravity = 0.12;
  }
}
/// Execute Script movement plane object
if !(global.isplanecrashed){
  scr_moveplane();
}else{
  sprite_index = sp_fokkercrash;
  image_speed = 0.2;
  if (image_index &gt;= image_number - 1) 
    image_speed = 0;
/// Execute just once animation crashed
  //sprite_index = sp_fokkercrash;
  //image_speed = 0.3
}
// Update Object Text with values after movement of plane
global.speedtxt = speed;
global.angletxt = direction;
global.altitudetxt = room_height - y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw self based on Sprite
draw_self()
//Crash animation
if (global.isplanecrashed){
  //sprite_index = sp_fokkercrash;
  //if(image_index&gt;=sprite_get_number(sprite_index)){//Animation Over
    //sprite_index=_spr_default//Go back to default sprite
  //  image_speed= 0;
  //}else{
  //  image_speed = 0.3;
 // }
}
//Draw Bounding Box around Object
draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
