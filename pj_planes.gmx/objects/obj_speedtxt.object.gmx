<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(Main_Font)
//draw_text(view_xview[0]+20, view_yview[0] + 20,"Speed = " + string(global.speedtxt) )
draw_text_colour(view_xview[0]+20, view_yview[0] + 20,"Speed = " + string(obj_playerplane.speed),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 40,"Direction = " + string(obj_playerplane.direction),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 60,"Altitude = " + string(obj_playerplane.altitude),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 80,"Bullets = " + string(obj_playerplane.bullets),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 100,"Bombs = " + string(obj_playerplane.bombs),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 120,"Reloading = " + string(obj_playerplane.isreloading),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 140,"Onrunway = " + string(obj_playerplane.isplaneonrunway),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 160,"Takeoff = " + string(obj_playerplane.isplanetakeoff),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 180,"Landed = " + string(obj_playerplane.isplanelanded),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 200,"Stall = " + string(obj_playerplane.isplanestall),c_blue,c_blue,c_black,c_black,1 );
draw_text_colour(view_xview[0]+20, view_yview[0] + 220,"Mouseenabled = " + string(global.mouseenabled) ,c_blue,c_blue,c_black,c_black,1 );
//draw_text_colour(view_xview[0]+20, view_yview[0] + 220,"Coord = " + string(view_xview) + " " + string(view_yview),c_blue,c_blue,c_black,c_black,1) ;

if (global.mouseenabled){
   currentAngle = obj_playerplane.direction;
  desiredAngle = point_direction(obj_playerplane.x,obj_playerplane.y,mouse_x,mouse_y);
  var dd = angle_difference(currentAngle, desiredAngle);
  
  draw_text_colour(view_xview[0]+20, view_yview[0] + 240,"cangle = " + string(currentAngle) + " dangle = " + string(desiredAngle) + " da = " + string(dd) + " flipped = " + string(obj_playerplane.isflipped) ,c_blue,c_blue,c_black,c_black,1 );

}
  
if obj_playerplane.isplanestall {
  //draw_text_colour(view_xview[0]+400, view_yview[0] + 20,"STALL",c_blue,c_blue,c_black,c_black,1 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
